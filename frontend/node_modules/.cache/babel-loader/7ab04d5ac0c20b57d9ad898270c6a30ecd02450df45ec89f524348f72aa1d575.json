{"ast":null,"code":"var _jsxFileName = \"/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './components/pages/HomePage';\nimport EventsPage, { getEvents } from './components/pages/EventsPage';\nimport EventsDetailPage from './components/pages/EventsDetailPage';\nimport NewEventPage from \"./components/pages/NewEventPage\";\nimport EditEventPage from \"./components/pages/EditEventPage\";\nimport RootLayout from './components/pages/RootLayout';\nimport EventsRootLayout from './components/pages/EventsRootLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const route = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }, this)\n    }, {\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 32\n        }, this),\n        loader: async () => {\n          const response = await fetch('http://localhost:8080/events');\n          if (!response.ok) {\n            ///\n          } else {\n            const resData = await response.json();\n            return resData.events;\n          }\n        }\n      }, {\n        path: ':eventId',\n        element: /*#__PURE__*/_jsxDEV(EventsDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 32\n        }, this)\n      }, {\n        path: ':eventId/edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 42\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: route\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","getEvents","EventsDetailPage","NewEventPage","EditEventPage","RootLayout","EventsRootLayout","jsxDEV","_jsxDEV","App","route","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","loader","response","fetch","ok","resData","json","events","router","_c","$RefreshReg$"],"sources":["/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom'\nimport HomePage from './components/pages/HomePage';\nimport EventsPage, {getEvents} from './components/pages/EventsPage';\nimport EventsDetailPage from './components/pages/EventsDetailPage';\nimport NewEventPage from \"./components/pages/NewEventPage\";\nimport EditEventPage from \"./components/pages/EditEventPage\";\nimport RootLayout from './components/pages/RootLayout';\nimport EventsRootLayout from './components/pages/EventsRootLayout';\n\nfunction App() {\n  const route = createBrowserRouter([\n    {path: \"/\",\n    element: <RootLayout/>,\n    children: [\n      {index: true, element: <HomePage/>},\n      {path: 'events', element: <EventsRootLayout/>,\n      children: [\n        {index: true, element: <EventsPage/> , \n        loader: async()=> {\n          const response = await fetch('http://localhost:8080/events');\n\n      if (!response.ok) {\n        ///\n      } else {\n        const resData = await response.json();\n        return resData.events\n      }\n        }},\n        {path: ':eventId', element: <EventsDetailPage/>},\n        {path: 'new', element: <NewEventPage/>},\n        {path: ':eventId/edit', element: <EditEventPage/>}\n      ]}\n    ]}\n  ])  \n  return <RouterProvider router={route}/>\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,UAAU,IAAGC,SAAS,QAAO,+BAA+B;AACnE,OAAOC,gBAAgB,MAAM,qCAAqC;AAClE,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,gBAAgB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,KAAK,GAAGb,mBAAmB,CAAC,CAChC;IAACc,IAAI,EAAE,GAAG;IACVC,OAAO,eAAEJ,OAAA,CAACH,UAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;IACtBC,QAAQ,EAAE,CACR;MAACC,KAAK,EAAE,IAAI;MAAEN,OAAO,eAAEJ,OAAA,CAACT,QAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EACnC;MAACL,IAAI,EAAE,QAAQ;MAAEC,OAAO,eAAEJ,OAAA,CAACF,gBAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;MAC7CC,QAAQ,EAAE,CACR;QAACC,KAAK,EAAE,IAAI;QAAEN,OAAO,eAAEJ,OAAA,CAACR,UAAU;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;QACpCG,MAAM,EAAE,MAAAA,CAAA,KAAU;UAChB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;UAEhE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;YAChB;UAAA,CACD,MAAM;YACL,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;YACrC,OAAOD,OAAO,CAACE,MAAM;UACvB;QACE;MAAC,CAAC,EACF;QAACd,IAAI,EAAE,UAAU;QAAEC,OAAO,eAAEJ,OAAA,CAACN,gBAAgB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,CAAC,EAChD;QAACL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACL,YAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,CAAC,EACvC;QAACL,IAAI,EAAE,eAAe;QAAEC,OAAO,eAAEJ,OAAA,CAACJ,aAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,CAAC;IACnD,CAAC;EACH,CAAC,CACH,CAAC;EACF,oBAAOR,OAAA,CAACV,cAAc;IAAC4B,MAAM,EAAEhB;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AACzC;AAACW,EAAA,GA1BQlB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}