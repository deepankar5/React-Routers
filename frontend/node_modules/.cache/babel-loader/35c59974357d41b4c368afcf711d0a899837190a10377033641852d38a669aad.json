{"ast":null,"code":"var _jsxFileName = \"/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, Form, useNavigation, json, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event = {}\n  } = _ref;\n  const navigate = useNavigate();\n  const navigator = useNavigation();\n  function cancelHandler() {\n    navigate('..');\n  }\n  let isSubmitting = navigator.state === 'submitting';\n  const {\n    title,\n    image,\n    date,\n    description\n  } = event;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: title !== null && title !== void 0 ? title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: image !== null && image !== void 0 ? image : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: date !== null && date !== void 0 ? date : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: description !== null && description !== void 0 ? description : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Submitting...' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"dvUyAQTpDo1hevcCRaZK0ezXI+g=\", false, function () {\n  return [useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function submitFormData(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const id = params.eventId;\n  let url = \"http://localhost:8080/events\";\n  if (request.method === 'PATCH') {\n    url = \"http://localhost:8080/events/\" + id;\n  }\n  const response = await fetch(url, {\n    method: request.method,\n    body: JSON.stringify(eventData),\n    headers: {\n      \"Content-Type\": 'application/json'\n    }\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Can't submit the data\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","Form","useNavigation","json","redirect","classes","jsxDEV","_jsxDEV","EventForm","_ref","_s","method","event","navigate","navigator","cancelHandler","isSubmitting","state","title","image","date","description","className","form","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","required","defaultValue","rows","actions","onClick","disabled","_c","submitFormData","_ref2","request","params","data","formData","eventData","get","eventId","url","response","fetch","body","JSON","stringify","headers","ok","message","status","$RefreshReg$"],"sources":["/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate, Form, useNavigation, json, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event = {} }) {\n  const navigate = useNavigate();\n  const navigator = useNavigation()\n\n  function cancelHandler() {\n    navigate('..');\n  }\n  let isSubmitting = navigator.state === 'submitting'\n\n  const {title, image, date, description} = event\n\n  return (\n    <Form method={method}  className={classes.form}>\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" required  defaultValue={title ?? ''}/>\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required  defaultValue={image ?? ''}/>\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required defaultValue={date ?? ''}/>\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required defaultValue={description ?? ''}/>\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>{isSubmitting ? 'Submitting...': 'Save'}</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\n\nexport async function submitFormData({request, params}) {\n  const data = await request.formData()\n  const eventData = {\n      title: data.get('title'),\n      image: data.get('image'),\n      date: data.get('date'),\n      description: data.get('description')\n  }\n  const id = params.eventId\n\n  let url = \"http://localhost:8080/events\"\n\n  if(request.method  === 'PATCH'){\n    url = \"http://localhost:8080/events/\" + id\n  }\n const response = await fetch(url, {\n      method: request.method,\n      body: JSON.stringify(eventData),\n      headers: {\n          \"Content-Type\": 'application/json'\n      }\n  })\n  if(!response.ok){\n      throw json({message: \"Can't submit the data\"}, {status: 500})\n  }\n  return redirect(\"/events\")\n}   "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}