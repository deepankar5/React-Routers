{"ast":null,"code":"var _jsxFileName = \"/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './components/pages/HomePage';\nimport E from 'first';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const route = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: route\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","E","jsxDEV","_jsxDEV","App","route","path","element","fileName","_jsxFileName","lineNumber","columnNumber","EventsPage","router","_c","$RefreshReg$"],"sources":["/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom'\nimport HomePage from './components/pages/HomePage';\nimport E from 'first'\nfunction App() {\n  const route = createBrowserRouter([\n    {path:\"/\", element: <HomePage/>},\n    {path: '/events', element: <EventsPage/>},\n  ])\n  return <RouterProvider router={route}/>\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,CAAC,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACrB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,KAAK,GAAGP,mBAAmB,CAAC,CAChC;IAACQ,IAAI,EAAC,GAAG;IAAEC,OAAO,eAAEJ,OAAA,CAACH,QAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,EAChC;IAACL,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAEJ,OAAA,CAACS,UAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,CAC1C,CAAC;EACF,oBAAOR,OAAA,CAACJ,cAAc;IAACc,MAAM,EAAER;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AACzC;AAACG,EAAA,GANQV,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}