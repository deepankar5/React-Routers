{"ast":null,"code":"var _jsxFileName = \"/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './components/pages/HomePage';\nimport EventsPage, { getEvents } from './components/pages/EventsPage';\nimport EventsDetailPage from './components/pages/EventsDetailPage';\nimport NewEventPage from \"./components/pages/NewEventPage\";\nimport EditEventPage from \"./components/PageContent.js/EditEventPage\";\nimport RootLayout from './components/PageContent.js/RootLayout';\nimport EventsRootLayout from './components/PageContent.js/EventsRootLayout';\nimport ErrorPage from './components/PageContent.js/ErrorPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const route = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 30\n      }, this)\n    }, {\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 32\n        }, this),\n        loader: getEvents\n      }, {\n        path: ':eventId',\n        element: /*#__PURE__*/_jsxDEV(EventsDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }, this)\n      }, {\n        path: ':eventId/edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: route\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","getEvents","EventsDetailPage","NewEventPage","EditEventPage","RootLayout","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","App","route","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","loader","router","_c","$RefreshReg$"],"sources":["/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom'\nimport HomePage from './components/pages/HomePage';\nimport EventsPage, {getEvents} from './components/pages/EventsPage';\nimport EventsDetailPage from './components/pages/EventsDetailPage';\nimport NewEventPage from \"./components/pages/NewEventPage\";\nimport EditEventPage from \"./components/PageContent.js/EditEventPage\";\nimport RootLayout from './components/PageContent.js/RootLayout';\nimport EventsRootLayout from './components/PageContent.js/EventsRootLayout';\nimport ErrorPage from './components/PageContent.js/ErrorPage';\n\nfunction App() {\n  const route = createBrowserRouter([\n    {path: \"/\",\n    element: <RootLayout/>,\n    errorElement: <ErrorPage/>,\n    children: [\n      {index: true, element: <HomePage/>},\n      {path: 'events', element: <EventsRootLayout/>,\n      children: [\n        {index: true, element: <EventsPage/> , \n        loader: getEvents},\n        {path: ':eventId', element: <EventsDetailPage/>},\n        {path: 'new', element: <NewEventPage/>},\n        {path: ':eventId/edit', element: <EditEventPage/>}\n      ]}\n    ]}\n  ])  \n  return <RouterProvider router={route}/>\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,UAAU,IAAGC,SAAS,QAAO,+BAA+B;AACnE,OAAOC,gBAAgB,MAAM,qCAAqC;AAClE,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,gBAAgB,MAAM,8CAA8C;AAC3E,OAAOC,SAAS,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,KAAK,GAAGd,mBAAmB,CAAC,CAChC;IAACe,IAAI,EAAE,GAAG;IACVC,OAAO,eAAEJ,OAAA,CAACJ,UAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;IACtBC,YAAY,eAAET,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;IAC1BE,QAAQ,EAAE,CACR;MAACC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEJ,OAAA,CAACV,QAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EACnC;MAACL,IAAI,EAAE,QAAQ;MAAEC,OAAO,eAAEJ,OAAA,CAACH,gBAAgB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;MAC7CE,QAAQ,EAAE,CACR;QAACC,KAAK,EAAE,IAAI;QAAEP,OAAO,eAAEJ,OAAA,CAACT,UAAU;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;QACpCI,MAAM,EAAEpB;MAAS,CAAC,EAClB;QAACW,IAAI,EAAE,UAAU;QAAEC,OAAO,eAAEJ,OAAA,CAACP,gBAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,CAAC,EAChD;QAACL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACN,YAAY;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,CAAC,EACvC;QAACL,IAAI,EAAE,eAAe;QAAEC,OAAO,eAAEJ,OAAA,CAACL,aAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE,CAAC;IACnD,CAAC;EACH,CAAC,CACH,CAAC;EACF,oBAAOR,OAAA,CAACX,cAAc;IAACwB,MAAM,EAAEX;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AACzC;AAACM,EAAA,GAlBQb,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}