{"ast":null,"code":"var _jsxFileName = \"/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/components/pages/EventsDetailPage.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  // useLoaderData fails because it try to look for the data in the own component only and not on the parent componenet\n  const data = useRouteLoaderData('event_details');\n  const event = data.event;\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function getIndividualEvent(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: 'Unable to fetch individual event'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexp;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","getIndividualEvent","_ref","request","params","id","eventId","response","fetch","ok","message","status","exp","$RefreshReg$"],"sources":["/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/components/pages/EventsDetailPage.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\"\nimport EventItem from \"../EventItem\"\n\nconst EventDetailPage = () => {\n    // useLoaderData fails because it try to look for the data in the own component only and not on the parent componenet\n    const data = useRouteLoaderData('event_details') \n   const event = data.event\n\n    return <EventItem event={event}/>\n}\n\nexport default EventDetailPage\n\nexport async function getIndividualEvent({request, params}){\n    const id = params.eventId\n    const response = await fetch(`http://localhost:8080/events/${id}`);\n    if(!response.ok){\n        throw json({message: 'Unable to fetch individual event'}, {status: 500})\n    }else {\n        return response\n    }\n}\n\nexp\n\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,eAAe,CAAC;EACjD,MAAMO,KAAK,GAAGD,IAAI,CAACC,KAAK;EAEvB,oBAAOJ,OAAA,CAACF,SAAS;IAACM,KAAK,EAAEA;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AACrC,CAAC;AAAAN,EAAA,CANKD,eAAe;EAAA,QAEJJ,kBAAkB;AAAA;AAAAY,EAAA,GAF7BR,eAAe;AAQrB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,kBAAkBA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACtD,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BH,EAAG,EAAC,CAAC;EAClE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMtB,IAAI,CAAC;MAACuB,OAAO,EAAE;IAAkC,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC5E,CAAC,MAAK;IACF,OAAOJ,QAAQ;EACnB;AACJ;AAEAK,GAAG;AAAA,IAAAZ,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}