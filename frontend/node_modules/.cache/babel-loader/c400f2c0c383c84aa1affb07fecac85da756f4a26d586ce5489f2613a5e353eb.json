{"ast":null,"code":"var _jsxFileName = \"/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/components/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../EventsList';\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const res = useLoaderData();\n  const events = res.events;\n  if (res.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"MsAsIV+I7RbC2JpOmbPo9q0yBG8=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function getEvents() {\n  const response = await fetch('http://localhost:8080/event');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Couldn\\'t fetch data....'\n    };\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","res","events","isError","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","getEvents","response","fetch","ok","message","$RefreshReg$"],"sources":["/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/components/pages/EventsPage.js"],"sourcesContent":["import EventsList from '../EventsList';\nimport {useLoaderData} from \"react-router-dom\"\nfunction EventsPage() {\n    const res = useLoaderData()\n    const events = res.events\n    if(res.isError){\n        return <p>{}</p>\n    }\n  return (\n    <>\n      <EventsList events = {events} />\n    </>\n  );\n}\n\nexport default EventsPage;\n\nexport async function getEvents(){\n    const response = await fetch('http://localhost:8080/event');\n     if(!response.ok){\n        return {isError: true, message: 'Couldn\\'t fetch data....'}\n     }else{\n        return response\n     }\n}"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,eAAe;AACtC,SAAQC,aAAa,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC9C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,GAAG,GAAGP,aAAa,EAAE;EAC3B,MAAMQ,MAAM,GAAGD,GAAG,CAACC,MAAM;EACzB,IAAGD,GAAG,CAACE,OAAO,EAAC;IACX,oBAAOP,OAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EACpB;EACF,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACEZ,OAAA,CAACH,UAAU;MAACS,MAAM,EAAIA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG,iBAC/B;AAEP;AAACP,EAAA,CAXQD,UAAU;EAAA,QACHL,aAAa;AAAA;AAAAe,EAAA,GADpBV,UAAU;AAanB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,SAASA,CAAA,EAAE;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EAC1D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACb,OAAO;MAACV,OAAO,EAAE,IAAI;MAAEW,OAAO,EAAE;IAA0B,CAAC;EAC9D,CAAC,MAAI;IACF,OAAOH,QAAQ;EAClB;AACL;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}