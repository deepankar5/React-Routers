{"ast":null,"code":"var _jsxFileName = \"/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/components/pages/NewEventPage.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function submitFormData(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: 'POST',\n    body: JSON.stringify(eventData),\n    headers: {\n      \"Content-Type\": 'application/json'\n    }\n  });\n  if (!response.ok) {\n    throw json({});\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","submitFormData","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","body","JSON","stringify","headers","ok","$RefreshReg$"],"sources":["/Users/deepankar/react_code/react-tutorial/routes-practise/frontend/src/components/pages/NewEventPage.js"],"sourcesContent":["import { json } from \"react-router-dom\"\nimport EventForm from \"../EventForm\"\n\nconst NewEventPage = () => {\n    return <EventForm/>\n}\nexport default NewEventPage\n\nexport async function submitFormData({request, params}) {\n    const data = await request.formData()\n    const eventData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        date: data.get('date'),\n        description: data.get('description')\n\n    }\n   const response = await fetch(\"http://localhost:8080/events\", {\n        method: 'POST',\n        body: JSON.stringify(eventData),\n        headers: {\n            \"Content-Type\": 'application/json'\n        }\n    })\n    if(!response.ok){\n        throw json({})\n    }\n}   "],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AACvB,CAAC;AAAAC,EAAA,GAFKL,YAAY;AAGlB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,cAAcA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAClD,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EAEvC,CAAC;EACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACxDC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC;IAC/BY,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EACF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAM7B,IAAI,CAAC,CAAC,CAAC,CAAC;EAClB;AACJ;AAAC,IAAAS,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}